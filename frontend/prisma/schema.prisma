// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  firstName     String
  lastName      String
  studentId     String?
  password      String
  isVerified    Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  enrolledCourses UserCourse[]
  semesters       Semester[]
  activities      Activity[]
  templates       Template[]
  activityTypes   ActivityType[]

  @@map("users")
}

model EmailVerification {
  id        String   @id @default(cuid())
  email     String   @unique
  code      String
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@map("email_verifications")
}

model Course {
  id            String   @id @default(cuid())
  courseCode    String   @unique // e.g., "326.081"
  title         String
  description   String?
  ects          Float
  semester      String   // "WS" or "SS"
  faculty       String
  department    String?
  prerequisites String[] // Array of course codes
  language      String   @default("German")
  courseType    String   // "VO", "UE", "VU", "SE", "PR", etc.
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  userCourses   UserCourse[]
  semesterCourses SemesterCourse[]

  @@map("courses")
}

model Semester {
  id        String   @id @default(cuid())
  userId    String
  name      String   // e.g., "WS 2024/25"
  year      Int      // e.g., 2024
  type      String   // "WS" or "SS"
  isActive  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  courses   SemesterCourse[]

  @@map("semesters")
}

model UserCourse {
  id        String   @id @default(cuid())
  userId    String
  courseId  String
  status    String   // "planned", "enrolled", "completed", "failed"
  grade     Float?   // 1-5 scale
  ects      Float?   // ECTS earned (might be different from course ECTS)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  course    Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@unique([userId, courseId])
  @@map("user_courses")
}

model SemesterCourse {
  id         String   @id @default(cuid())
  semesterId String
  courseId   String
  createdAt  DateTime @default(now())

  // Relations
  semester   Semester @relation(fields: [semesterId], references: [id], onDelete: Cascade)
  course     Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@unique([semesterId, courseId])
  @@map("semester_courses")
}

model Activity {
  id          String   @id @default(cuid())
  userId      String
  title       String
  description String?
  startTime   DateTime
  endTime     DateTime
  type        String
  color       String   @default("#3b82f6")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("activities")
}

model Template {
  id          String   @id @default(cuid())
  userId      String
  name        String
  title       String
  description String?
  startTime   String   // Time format like "09:00"
  endTime     String   // Time format like "10:30"
  type        String
  color       String   @default("#3b82f6")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("templates")
}

model ActivityType {
  id        String   @id @default(cuid())
  userId    String
  name      String
  color     String   @default("#3b82f6")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, name])
  @@map("activity_types")
}